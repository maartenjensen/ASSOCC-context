; Filename: context_state_obligation_student.nls
; What we know from the context within these functions
; Location: Does not matter in implementation, as the agent just travels to the location where the agent can perform the action.
; Time: Morning or afternoon during working time
; Age: Student
; Sickness: The agent is not sick

; Important needs (for student):
; -----------------------------------
; Risk avoidance
; Compliance
; Belonging
; Leisure
; Autonomy
; Sleep
; Conformity 
; Food safety
; Luxury 

to-report context-state-obligation-student ; This should be ONLY young since there is a different action
  
  ; The time is (morning or afternoon) and on a working day
  ;if who = #agent-id [ print "Custom deliberation: Obligation student state" ]
  let most-salient-need context-most-salient-need-obligation-student
  ;if who = #agent-id [ print (word "Most salient need:" most-salient-need) ]
  
  if most-salient-need = need-compliance [ ; It seems that the agents get a boost of following compliance before morning, so in morning and afternoon their need for compliance is very high.
    ifelse context-normative-should-I-stay-home
    [ report context-determine-social-distancing (list my-home "rest") ]
    [ report context-determine-social-distancing (activity-descriptor my-university "learning") ]
  ]
  if most-salient-need = need-belonging [ ; Belonging is both achieved home and school (and other places) so it depends on the rules
    ifelse context-normative-should-I-stay-home
    [ report context-determine-social-distancing (list my-home "rest") ]
    [ report context-determine-social-distancing (activity-descriptor my-university "learning") ]
  ]
  if most-salient-need = need-autonomy [
    report lput False (activity-descriptor my-university "learning")
  ]
  if most-salient-need = need-risk-avoidance [
    report (list my-home "rest" True)
  ]
  if most-salient-need = need-conformity [
    let network-action context-conformity-get-network-action
    ifelse empty? network-action
    [ ;if who = #agent-id [ print (word "Get network action: No action found") ] 
      report []
    ]
    [
      let network-g-type (location-of network-action)
      let network-motive motive-of network-action
      let network-sd did-my-network-socially-distance?
      
      if network-motive = "mandatory" or network-motive = work-motive
      [
        report lput network-sd (activity-descriptor my-university "learning")
      ]
    ]
  ]
  ; These other needs are determined by ASSOCC
  ; Sleep
  ; Leisure
  ; Food safety
  ; Luxury
  report []
end

; This function compares without the luxury and food safety need, since young don't do shopping
to-report context-most-salient-need-obligation-student
  let lowest-need-level risk-avoidance-satisfaction-level
  let lowest-need need-risk-avoidance
  if compliance-satisfaction-level < lowest-need-level [
    set lowest-need-level compliance-satisfaction-level
    set lowest-need need-compliance 
  ]
  if belonging-satisfaction-level < lowest-need-level [
    set lowest-need-level belonging-satisfaction-level
    set lowest-need need-belonging 
  ]
  if leisure-satisfaction-level < lowest-need-level [
    set lowest-need-level leisure-satisfaction-level
    set lowest-need need-leisure 
  ]
  if autonomy-satisfaction-level < lowest-need-level [
    set lowest-need-level autonomy-satisfaction-level
    set lowest-need need-autonomy 
  ]
  if sleep-satisfaction-level < lowest-need-level [
    set lowest-need-level sleep-satisfaction-level
    set lowest-need need-sleep 
  ]
  if conformity-satisfaction-level < lowest-need-level [
    set lowest-need-level conformity-satisfaction-level
    set lowest-need need-conformity 
  ]
  if food-safety-satisfaction-level < lowest-need-level [
    set lowest-need-level food-safety-satisfaction-level
    set lowest-need need-food-safety 
  ]
  if luxury-satisfaction-level < lowest-need-level [
    set lowest-need-level luxury-satisfaction-level
    set lowest-need need-luxury
  ]
  report lowest-need
end