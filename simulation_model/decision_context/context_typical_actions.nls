to set-table-typical-actions
  let free-time-activities get-free-time-activities
  set table-typical-actions table:make
  ; Determine workingday
  table:put table-typical-actions (sort-by < (list time-evening time-workday)) free-time-activities
  table:put table-typical-actions (sort-by < (list time-night time-workday)) (list action-be-at-home) ; This is the typical action so its just offered as an option Heuristics
  ; Determine weekend
  table:put table-typical-actions (sort-by < (list time-morning time-weekendday)) free-time-activities
  table:put table-typical-actions (sort-by < (list time-afternoon time-weekendday)) free-time-activities
  table:put table-typical-actions (sort-by < (list time-evening time-weekendday)) free-time-activities
  table:put table-typical-actions (sort-by < (list time-night time-weekendday)) (list action-be-at-home) ; This is the typical action so its just offered as an option Heuristics
end

to add-table-typical-actions-age

  let actions-lists []
  ifelse #action-space >= 2 [
    if age = young-age   [ set actions-lists (list action-school) ]
    if age = student-age [ set actions-lists (list action-university) ]
    if age = worker-age  [ set actions-lists (list action-workplace) ]
  ]
  [ set actions-lists (list action-be-at-home) ]
  if age = retired-age [ set actions-lists get-free-time-activities ]

  if not empty? actions-lists [
    table:put table-typical-actions (sort-by < (list time-morning time-workday)) actions-lists
    table:put table-typical-actions (sort-by < (list time-afternoon time-workday)) actions-lists
  ]
end

to set-table-need-actions
  set table-need-actions table:make
  table:put table-need-actions (sort-by < (list need-urgent-risk-avoidance)) (list action-be-at-home)
  ;table:put table-need-actions (sort-by < (list need-urgent-compliance)) (list )
  ;table:put table-need-actions (sort-by < (list need-urgent-financial-stability)) (list )
  table:put table-need-actions (sort-by < (list need-urgent-belonging)) (list action-be-at-home action-public-leisure action-private-leisure action-non-essential-shop)
  table:put table-need-actions (sort-by < (list need-urgent-leisure)) (list action-public-leisure action-private-leisure) ; action-be-at-home is removed since leisure is satisfied more by public and private leisure
  table:put table-need-actions (sort-by < (list need-urgent-luxury)) (list action-non-essential-shop)
  ;table:put table-need-actions (sort-by < (list need-urgent-autonomy)) (list )
  table:put table-need-actions (sort-by < (list need-urgent-food-safety)) (list action-essential-shop)
  ;table:put table-need-actions (sort-by < (list need-urgent-financial-survival)) (list )
  ;table:put table-need-actions (sort-by < (list need-urgent-health)) (list )
  table:put table-need-actions (sort-by < (list need-urgent-sleep)) (list action-be-at-home)
  table:put table-need-actions (sort-by < (list need-urgent-conformity)) (list action-imitate-network) 
end

to set-table-need-actions-working-hours
  set table-need-actions-working-hours table:make
  if age = young-age   [ 
    table:put table-need-actions-working-hours (sort-by < (list need-urgent-compliance)) (list action-school)
    table:put table-need-actions-working-hours (sort-by < (list need-urgent-belonging)) (list action-school)
    table:put table-need-actions-working-hours (sort-by < (list need-urgent-autonomy)) (list action-school)
  ]
  if age = student-age [
    table:put table-need-actions-working-hours (sort-by < (list need-urgent-compliance)) (list action-university)
    table:put table-need-actions-working-hours (sort-by < (list need-urgent-belonging)) (list action-university)
    table:put table-need-actions-working-hours (sort-by < (list need-urgent-autonomy)) (list action-university)
  ]
  if age = worker-age  [
    table:put table-need-actions-working-hours (sort-by < (list need-urgent-risk-avoidance)) (list action-work-at-home)
    table:put table-need-actions-working-hours (sort-by < (list need-urgent-compliance)) (list action-workplace)
    table:put table-need-actions-working-hours (sort-by < (list need-urgent-financial-stability)) (list action-workplace action-work-at-home)
    table:put table-need-actions-working-hours (sort-by < (list need-urgent-belonging)) (list action-work-at-home)
    table:put table-need-actions-working-hours (sort-by < (list need-urgent-autonomy)) (list action-workplace)
    table:put table-need-actions-working-hours (sort-by < (list need-urgent-financial-survival)) (list action-workplace action-work-at-home)
  ]
end

to set-table-actions-with-related-needs
  set table-actions-with-related-needs table:make
  table:put table-actions-with-related-needs (list action-be-at-home action-essential-shop) (list need-urgent-belonging need-urgent-leisure need-urgent-food-safety need-urgent-financial-stability need-urgent-financial-survival)
  table:put table-actions-with-related-needs (list action-be-at-home action-essential-shop action-private-leisure) (list need-urgent-belonging need-urgent-leisure need-urgent-food-safety need-urgent-financial-stability need-urgent-financial-survival )
  table:put table-actions-with-related-needs (list action-be-at-home action-essential-shop action-private-leisure action-non-essential-shop) (list need-urgent-belonging need-urgent-leisure need-urgent-food-safety need-urgent-financial-stability need-urgent-financial-survival need-urgent-luxury )
  table:put table-actions-with-related-needs (list action-be-at-home action-essential-shop action-private-leisure action-non-essential-shop action-public-leisure) (list need-urgent-belonging need-urgent-leisure need-urgent-food-safety need-urgent-financial-stability need-urgent-financial-survival need-urgent-luxury )
  
  table:put table-actions-with-related-needs (list action-be-at-home action-private-leisure) (list need-urgent-belonging need-urgent-leisure)
  table:put table-actions-with-related-needs (list action-be-at-home action-private-leisure action-public-leisure) (list need-urgent-belonging need-urgent-leisure)
end

to-report get-free-time-activities
  let free-time-activities (list action-be-at-home)
  if #action-space >= 3 and age != young-age
  [ set free-time-activities lput action-essential-shop free-time-activities ]
  if #action-space >= 4
  [ set free-time-activities lput action-private-leisure free-time-activities ]
  if #action-space >= 5 and age != young-age
  [ set free-time-activities lput action-non-essential-shop free-time-activities ] 
  if #action-space >= 6
  [ set free-time-activities lput action-public-leisure free-time-activities ]
  report free-time-activities
end
