; Filename: context_state_obligation_young.nls
; What we know from the context within these functions
; Location: Does not matter in implementation, as the agent just travels to the location where the agent can perform the action.
; Time: Morning or afternoon during working time
; Age: Young
; Sickness: The agent is not sick

; Important needs (for young):
; -----------------------------------
; Risk avoidance : The agent should always stay home with SD, since its lower than compliance as well
; Compliance     : If need to stay home -> stay home, otherwise go to school
; Belonging      : If need to stay home -> stay home, otherwise go to school (since belonging is satisfied at both home and school (and other places)
; Leisure        : Full ASSOCC (to difficult to determine with simple rules)
; Autonomy       : 
; Sleep          : 
; Conformity     : If the network is going to school (or university or work) the young agent will go to school, otherwise full ASSOCC will determine it.

; Reconsider these states as they don't make so much sense (at least the risk avoidance part). Maybe autonomy and risk avoidance should be switched
to-report context-state-obligation-young ; This should be ONLY young since there is a different action
  
  ; The time is (morning or afternoon) and on a working day
  if who = #agent-id [ print "Custom deliberation: Obligation young state" ]
  let most-salient-need context-most-salient-need-obligation-young
  if who = #agent-id [ print (word "Most salient need:" most-salient-need) ]
  
  if most-salient-need = need-compliance [ ; It seems that the agents get a boost of following compliance before morning, so in morning and afternoon their need for compliance is very high.
    ifelse context-normative-should-I-stay-home
    [ report context-determine-social-distancing (list my-home "rest") ]
    [ report context-determine-social-distancing (activity-descriptor my-school "mandatory") ]
  ]
  if most-salient-need = need-belonging [ 
    ifelse context-normative-should-I-stay-home
    [ report context-determine-social-distancing (list my-home "rest") ]
    [ report context-determine-social-distancing (activity-descriptor my-school "mandatory") ]
  ]
  if most-salient-need = need-autonomy [
    report lput False (activity-descriptor my-school "mandatory")
  ]
  if most-salient-need = need-risk-avoidance [ 
    report (list my-home "rest" True)
  ]
  if most-salient-need = need-conformity [
    let network-action context-conformity-get-network-action
    ifelse empty? network-action
    [ if who = #agent-id [ print (word "Get network action: No action found") ] 
      report []
    ]
    [
      let network-g-type (location-of network-action)
      let network-motive motive-of network-action
      let network-sd did-my-network-socially-distance?
      
      if network-motive = "mandatory" or network-motive = work-motive
      [
        report lput network-sd (activity-descriptor my-school "mandatory")
      ]
    ]
  ]
  ; Conformity: if the network is going to school (or university or work) the young agent will go to school, otherwise full ASSOCC will determine it.
  ; Sleep
  ; Leisure
  report []
end

to-report context-normative-should-I-stay-home
  if who = #agent-id [ print (word "Normative check: Should I stay home " should-I-stay-home?) ]
  report should-I-stay-home?
end

; Make this dependent on the salient need VS the need for compliance
to-report context-normative-should-I-stay-home-with-need-new [p-most-salient-need-level]
  ifelse p-most-salient-need-level < compliance-satisfaction-level ; This might have to be modified dependent on the need levels
  [ if who = #agent-id [ print (word "Normative check: I break quarantine because salient need " p-most-salient-need-level " is more salient than compliance " compliance-satisfaction-level ) ]
    report False ]
  [ if who = #agent-id [ print (word "Normative check: I should stay home because salient need " p-most-salient-need-level " is more salient than compliance " compliance-satisfaction-level ) ]
    report True ]
end


; This function compares without the luxury and food safety need, since young don't do shopping
to-report context-most-salient-need-obligation-young
  let lowest-need-level risk-avoidance-satisfaction-level
  let lowest-need need-risk-avoidance
  if compliance-satisfaction-level < lowest-need-level [
    set lowest-need-level compliance-satisfaction-level
    set lowest-need need-compliance 
  ]
  if belonging-satisfaction-level < lowest-need-level [
    set lowest-need-level belonging-satisfaction-level
    set lowest-need need-belonging 
  ]
  if leisure-satisfaction-level < lowest-need-level [
    set lowest-need-level leisure-satisfaction-level
    set lowest-need need-leisure 
  ]
  if autonomy-satisfaction-level < lowest-need-level [
    set lowest-need-level autonomy-satisfaction-level
    set lowest-need need-autonomy 
  ]
  if get-sleep-satisfaction-day < lowest-need-level [
    set lowest-need-level get-sleep-satisfaction-day
    set lowest-need need-sleep 
  ]
  if conformity-satisfaction-level < lowest-need-level [
    set lowest-need-level conformity-satisfaction-level
    set lowest-need need-conformity 
  ]
  report lowest-need
end