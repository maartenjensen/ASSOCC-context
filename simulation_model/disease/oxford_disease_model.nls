to-report transition-odm [s]
  if s = healthy-infection-status [report stochastic-fsm-transition (list (list healthy-infection-status 1))]
  if s = immune-infection-status [report stochastic-fsm-transition (list (list immune-infection-status 1))]
  if s = dead-infection-status [report stochastic-fsm-transition (list (list dead-infection-status 1))]
  if s = just-contaminated-infection-status [
    report stochastic-fsm-transition (list 
      (list timed-state asymptomatic-to-rec-infection-status tau-a-rec p-asymptomatic-odm )
      (list timed-state pre-symptomatic-to-mild-infection-status tau-sym p-pre-symptomatic-mild-odm)
      (list timed-state pre-symptomatic-to-severe-infection-status tau-sym)
    )
  ]
  if is-timed-state? s and time-of-timed-state s > 0 [
    report stochastic-fsm-transition (list 
    (list timed-state state-of-timed-state s (time-of-timed-state s - 1)))
  ]
  
  if state-of-timed-state s = asymptomatic-to-rec-infection-status
  or state-of-timed-state s = mild-to-rec-infection-status
  or state-of-timed-state s = severe-to-rec-infection-status  
  or state-of-timed-state s = hospital-to-rec-infection-status
  [report stochastic-fsm-transition (list (list immune-infection-status 1))]
  
  if state-of-timed-state s = hospital-to-death-infection-status[ report stochastic-fsm-transition (list (list dead-infection-status 1))]
  
  if state-of-timed-state s = pre-symptomatic-to-mild-infection-status [report stochastic-fsm-transition (list (list timed-state symptomatic-mild-infection-status tau-sym))]
  if state-of-timed-state s = pre-symptomatic-to-severe-infection-status [report stochastic-fsm-transition (list (list timed-state symptomatic-severe-infection-status tau-sym))]
  
  if state-of-timed-state s = symptomatic-severe-infection-status [report stochastic-fsm-transition (list
    (list timed-state severe-to-hospital-infection-status tau-hosp p-hosp)
    (list timed-state severe-to-rec-infection-status tau-rec)
  )]
  
  if state-of-timed-state s = symptomatic-mild-infection-status [report stochastic-fsm-transition (list
    (list timed-state mild-to-rec-infection-status tau-rec)
  )]
  
  if state-of-timed-state s = severe-to-hospital-infection-status [report stochastic-fsm-transition (list
    (list timed-state hospital-to-rec-infection-status tau-hosp-rec p-survival-in-hospital)
    (list timed-state hospital-to-death-infection-status tau-hospital-to-death)
  )]
  
  error (sentence "unimplemented" s)
end

to-report next-state-odm [s]
  report stochastic-transition-apply transition-odm s
end

;these numbers are made up from general statistics as we don't have the oxford model. I.e. most children are asymptomatic
;altogether we have young: 0.6 asymptomatic; 0.3 mild; 0.1 severe [among which 0.1 will die]
;altogether we have student & worker: 0.3 asymptomatic; 0.6 mild; 0.1 severe [among which 0.1 will die]
;altogether we have young: 0.1 asymptomatic; 0.3 mild; 0.6 severe [among which 0.4 will die]
to-report p-asymptomatic-odm 
  report 0.18
;  if is-young? [report 0.6]
;  if is-student? or is-worker? [report 0.3]
;  if is-retired? [report 0.18]
  ;[]
;  report 0.1
end

;these numbers are made up from general statistics as we don't have the oxford model. I.e. most children are asymptomatic
to-report p-pre-symptomatic-mild-odm
  if is-young? [report 0.79] 
  if is-student? [report 0.73] 
  if is-worker? [report 0.6125]
  if is-retired? [report 0.34]
end

to-report p-hosp
  if is-young? [report 0.02] 
  if is-student? [report 0.04] 
  if is-worker? [report 0.1025]
  if is-retired? [report 0.15]
end

to-report tau-hosp
  report 5
;#  let mean-val 5.14
;  let variance-val 2.5
;  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val)))  * #ticks-per-day
end

to-report tau-hosp-rec
  let mean-val ((2.5 + 4) / 2 ) + 8
  let variance-val 3.60555
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val)))  * #ticks-per-day

end

to-report tau-hospital-to-death
  let mean-val 2.5 + 6 / 2
  let variance-val 2
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val)))  * #ticks-per-day

end

to-report p-survival-in-hospital
  if is-young? [report 1 - (0.05 * 0.29)] 
  if is-student? [report 1 - (0.05 * 0.5)] 
  if is-worker? [report 1 - (0.12725 * 0.585)]
  if is-retired? [report 1 - (0.585 * 0.94)]
end
  

to-report tau-a-rec
    let mean-val 15 
  let variance-val 5
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val)))  * #ticks-per-day

end

to-report tau-rec
  let mean-val 12
  let variance-val 5
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val)))  * #ticks-per-day

end

to-report tau-sym
  let mean-val 6 
  let variance-val 2.5
  report round (random-gamma (mean-val * mean-val / variance-val) (1 / (variance-val / mean-val)))  * #ticks-per-day
end