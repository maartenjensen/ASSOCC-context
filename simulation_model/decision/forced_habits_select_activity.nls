; Filename: forced_habits_select_activity.nls

to forced-habits-select-activity

  let c-a forced-habits-deliberation-select-activity

  ;;select if migration takes over and people move around
  if (migration? and random-float 1 < probability-going-abroad) [
    set c-a (list away-gathering-point travelling-motive false)
  ]
  let loc location-of c-a
  select-activity-wtf? loc
  set current-activity loc
  set current-motivation motive-of c-a
  set chosen-available-activity-descriptor c-a
  set is-I-apply-social-distancing? social-distancing-of c-a
  if current-activity != away-gathering-point and current-motivation = travelling-motive [error "wrong place while travelling"]
  if log-violating-quarantine? [ process-quarantine-violation-event]
  
  if ce-log-agent and who = ce-log-agent-id [ print (word "- Final action: " ([gathering-type] of current-activity) ", " current-motivation ", " is-i-apply-social-distancing?)  ]
  
end

to-report forced-habits-deliberation-select-activity
  
  ; Print the log
  if ce-log-agent and who = ce-log-agent-id [ ifelse (slice-of-the-day = "morning") [ print "" print (word "== STEP " (ticks) ", DAY START AGENT: " ce-log-agent-id ", AGE: " age " ==") ][ print "" ] ]
  if ce-log-agent and who = ce-log-agent-id [ print (word ":" slice-of-the-day ", working-day: " is-working-day-for-me? ", sick: " (has-internally-visible-symptoms? or is-believing-to-be-infected?) ":") ]

  ; Determine whether the agent is sick
  if has-internally-visible-symptoms? or is-believing-to-be-infected?
  [
    ; Determine wheither the agent needs to have treatment
    ifelse infection-status = hospital-to-death-infection-status or infection-status = hospital-to-rec-infection-status
    [ 
      if ce-log-agent and who = ce-log-agent-id [ print (word "Treatment, very critical:" ([infection-status] of turtle ce-log-agent-id)) ]
      report lput True (activity-descriptor my-hospital treatment-motive)
    ]
    [
      if ce-log-agent and who = ce-log-agent-id [ print "No treatment needed, however sick" ]
      report (list my-home "rest" false)
    ]
  ]
  
  ; Determine if its night because then agents should just stay at home
  if slice-of-the-day = "night" [
    report (list my-home "rest" false)
  ]
  
  ; Determine whether its a working day, working from home is not done since the agent just follows habits
  if age != retired-age and (slice-of-the-day = "morning" or slice-of-the-day = "afternoon") and is-working-day-for-me? [
    report (lput false obligation-activity-descriptor)
  ]
  
  report (list my-home "rest" false)
end

